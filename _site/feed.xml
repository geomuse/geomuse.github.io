<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-10-26T21:19:43+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">g</title><subtitle>stay hungry, stay foolish</subtitle><entry><title type="html">multi factor model</title><link href="http://localhost:4000/financial/option/multi_factor_model/" rel="alternate" type="text/html" title="multi factor model" /><published>2024-10-26T11:24:29+08:00</published><updated>2024-10-26T11:24:29+08:00</updated><id>http://localhost:4000/financial/option/multi_factor_model</id><content type="html" xml:base="http://localhost:4000/financial/option/multi_factor_model/"><![CDATA[<h3 id="0-因子筛选factor">0. 因子筛选（Factor）</h3>

<p>多因子模型在金融投资和风险管理中扮演着重要角色，通过多个因子的组合来解释和预测资产的收益和风险。因子处理流程是构建有效多因子模型的核心步骤，直接影响模型的准确性和稳定性。以下是对多因子模型因子处理流程的详细解释和介绍：</p>

<h3 id="1-因子选取factor-selection">1. 因子选取（Factor Selection）</h3>

<p><strong>目的</strong>：选择具有解释力和预测能力的因子。</p>

<ul>
  <li><strong>理论基础</strong>：基于金融经济学理论，如CAPM、APT等，选择有经济含义的因子。</li>
  <li><strong>实证分析</strong>：通过历史数据验证因子的有效性和稳健性。</li>
  <li><strong>数据可用性</strong>：确保因子数据的可获得性和可靠性。</li>
</ul>

<h3 id="2-数据预处理data-preprocessing">2. 数据预处理（Data Preprocessing）</h3>

<p><strong>目的</strong>：提高数据质量，减少噪声和异常值的影响。</p>

<ul>
  <li><strong>缺失值处理</strong>：填补或剔除缺失数据，常用方法包括均值填充、插值等。</li>
  <li><strong>去极值处理</strong>：处理异常值，防止其对模型造成偏差，常用方法有百分位数截断等。</li>
  <li><strong>数据平滑</strong>：减少短期波动，突出长期趋势。</li>
</ul>

<h3 id="3-因子构建factor-construction">3. 因子构建（Factor Construction）</h3>

<p><strong>目的</strong>：将原始数据转换为可用于模型的因子。</p>

<ul>
  <li><strong>标准化处理</strong>：统一因子尺度，常用z-score标准化或分位数标准化。</li>
  <li><strong>正交化处理</strong>：消除因子间的相关性，提高模型的稳定性。</li>
  <li><strong>组合因子</strong>：根据需要组合多个基础因子形成新的复合因子。</li>
</ul>

<h3 id="4-因子检验factor-testing">4. 因子检验（Factor Testing）</h3>

<p><strong>目的</strong>：评估因子的有效性和稳健性。</p>

<ul>
  <li><strong>相关性分析</strong>：检查因子与目标变量之间的相关性。</li>
  <li><strong>多重共线性检测</strong>：防止因子间高度相关导致模型不稳定。</li>
  <li><strong>时间稳定性检验</strong>：确保因子在不同时间段均保持有效。</li>
</ul>

<h3 id="5-因子优化factor-optimization">5. 因子优化（Factor Optimization）</h3>

<p><strong>目的</strong>：优化因子权重和组合，提高模型性能。</p>

<ul>
  <li><strong>权重确定</strong>：根据因子的历史表现和风险特征，分配适当的权重。</li>
  <li><strong>回归分析</strong>：使用多元回归模型确定因子的边际贡献。</li>
  <li><strong>机器学习方法</strong>：如LASSO、岭回归等用于因子选择和权重优化。</li>
</ul>

<h3 id="6-组合构建portfolio-construction">6. 组合构建（Portfolio Construction）</h3>

<p><strong>目的</strong>：根据优化后的因子构建投资组合。</p>

<ul>
  <li><strong>优化算法</strong>：使用均值-方差模型、风险平价模型等方法进行组合优化。</li>
  <li><strong>约束条件</strong>：考虑实际投资中的限制，如仓位限制、交易成本等。</li>
  <li><strong>再平衡策略</strong>：制定定期或条件触发的组合调整策略。</li>
</ul>

<h3 id="7-风险管理risk-management">7. 风险管理（Risk Management）</h3>

<p><strong>目的</strong>：监控和控制投资组合的风险。</p>

<ul>
  <li><strong>风险指标计算</strong>：如VaR（在险价值）、CVaR（条件在险价值）等。</li>
  <li><strong>压力测试</strong>：模拟极端市场条件下组合的表现。</li>
  <li><strong>对冲策略</strong>：使用衍生品或其他工具对冲特定风险。</li>
</ul>

<h3 id="8-绩效评估performance-evaluation">8. 绩效评估（Performance Evaluation）</h3>

<p><strong>目的</strong>：评估模型和组合的实际表现。</p>

<ul>
  <li><strong>绝对收益指标</strong>：如年化收益率、夏普比率等。</li>
  <li><strong>相对收益指标</strong>：与基准指数或竞争策略进行比较。</li>
  <li><strong>因子贡献分析</strong>：评估各因子对整体收益的贡献度。</li>
</ul>

<h3 id="9-模型维护与更新model-maintenance-and-update">9. 模型维护与更新（Model Maintenance and Update）</h3>

<p><strong>目的</strong>：确保模型始终适应市场变化。</p>

<ul>
  <li><strong>定期检验</strong>：定期重新评估因子的有效性。</li>
  <li><strong>模型更新</strong>：根据新数据和市场趋势，更新模型参数和结构。</li>
  <li><strong>持续优化</strong>：应用新的技术和方法，如深度学习等，提高模型性能。</li>
</ul>

<h3 id="10-文档记录与合规documentation-and-compliance">10. 文档记录与合规（Documentation and Compliance）</h3>

<p><strong>目的</strong>：确保模型开发和应用过程的透明度和合规性。</p>

<ul>
  <li><strong>详细记录</strong>：保存因子选择、模型构建、测试结果等所有步骤的记录。</li>
  <li><strong>合规审查</strong>：确保模型符合监管要求和内部合规政策。</li>
  <li><strong>透明沟通</strong>：与相关利益方沟通模型的方法和结果。</li>
</ul>

<hr />

<p><strong>总结</strong>：</p>

<p>多因子模型的因子处理流程是一个系统而循环的过程，需要在每个环节进行细致的分析和优化。</p>

<p>通过科学的方法和严谨的流程，可以构建出具有预测能力和稳健性的多因子模型，为投资决策和风险管理提供有力支持。</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">yfinance</span> <span class="k">as</span> <span class="n">yf</span>
<span class="kn">from</span> <span class="n">scipy.stats</span> <span class="kn">import</span> <span class="n">zscore</span>
<span class="kn">import</span> <span class="n">talib</span> <span class="k">as</span> <span class="n">ta</span>

<span class="c1"># 获取数据
</span><span class="n">tickers</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">AAPL</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">MSFT</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">GOOGL</span><span class="sh">'</span><span class="p">]</span>  <span class="c1"># 示例股票代码，可以替换成你的标的
</span><span class="n">data</span> <span class="o">=</span> <span class="n">yf</span><span class="p">.</span><span class="nf">download</span><span class="p">(</span><span class="n">tickers</span><span class="p">,</span> <span class="n">start</span><span class="o">=</span><span class="sh">"</span><span class="s">2020-01-01</span><span class="sh">"</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="sh">"</span><span class="s">2023-01-01</span><span class="sh">"</span><span class="p">)</span>

<span class="n">close</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">Adj Close</span><span class="sh">'</span><span class="p">]</span>
<span class="n">high</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">High</span><span class="sh">'</span><span class="p">]</span>
<span class="n">low</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">Low</span><span class="sh">'</span><span class="p">]</span>
<span class="n">volume</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">Volume</span><span class="sh">'</span><span class="p">]</span>

<span class="c1"># 生成技术分析因子
</span><span class="n">factors</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">index</span><span class="o">=</span><span class="n">data</span><span class="p">.</span><span class="n">index</span><span class="p">)</span>

<span class="c1"># 示例技术因子：移动平均、相对强弱指数(RSI)、布林带
</span><span class="k">for</span> <span class="n">ticker</span> <span class="ow">in</span> <span class="n">tickers</span><span class="p">:</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_SMA20</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">SMA</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_RSI14</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">RSI</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_BB_upper</span><span class="sh">'</span><span class="p">],</span> <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_BB_middle</span><span class="sh">'</span><span class="p">],</span> <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_BB_lower</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">BBANDS</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">nbdevup</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">nbdevdn</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">matype</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="c1"># 计算简单移动平均线（SMA）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_SMA20</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">SMA</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_SMA50</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">SMA</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
    
    <span class="c1"># 计算指数移动平均线（EMA）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_EMA20</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">EMA</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_EMA50</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">EMA</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
    
    <span class="c1"># 计算相对强弱指数（RSI）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_RSI14</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">RSI</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    
    <span class="c1"># 计算布林带（Bollinger Bands）
</span>    <span class="n">upperband</span><span class="p">,</span> <span class="n">middleband</span><span class="p">,</span> <span class="n">lowerband</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">BBANDS</span><span class="p">(</span>
        <span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">nbdevup</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">nbdevdn</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">matype</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_BB_upper</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">upperband</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_BB_middle</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">middleband</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_BB_lower</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">lowerband</span>
    
    <span class="c1"># 计算移动平均收敛散度（MACD）
</span>    <span class="n">macd</span><span class="p">,</span> <span class="n">macdsignal</span><span class="p">,</span> <span class="n">macdhist</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">MACD</span><span class="p">(</span>
        <span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">fastperiod</span><span class="o">=</span><span class="mi">12</span><span class="p">,</span> <span class="n">slowperiod</span><span class="o">=</span><span class="mi">26</span><span class="p">,</span> <span class="n">signalperiod</span><span class="o">=</span><span class="mi">9</span><span class="p">)</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_MACD</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">macd</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_MACD_signal</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">macdsignal</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_MACD_hist</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">macdhist</span>
    
    <span class="c1"># 计算随机指标（Stochastic Oscillator）
</span>    <span class="n">slowk</span><span class="p">,</span> <span class="n">slowd</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">STOCH</span><span class="p">(</span>
        <span class="n">high</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">low</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span>
        <span class="n">fastk_period</span><span class="o">=</span><span class="mi">14</span><span class="p">,</span> <span class="n">slowk_period</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">slowk_matype</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
        <span class="n">slowd_period</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">slowd_matype</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_Stoch_slowk</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">slowk</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_Stoch_slowd</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">slowd</span>
    
    <span class="c1"># 计算平均真实波幅（ATR）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_ATR14</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">ATR</span><span class="p">(</span>
        <span class="n">high</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">low</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    
    <span class="c1"># 计算威廉姆斯指标（Williams %R）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_WilliamsR14</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">WILLR</span><span class="p">(</span>
        <span class="n">high</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">low</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    
    <span class="c1"># 计算动量指标（Momentum）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_Momentum10</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">MOM</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    
    <span class="c1"># 计算商品通道指数（CCI）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_CCI14</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">CCI</span><span class="p">(</span>
        <span class="n">high</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">low</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    
    <span class="c1"># 计算三重指数平滑平均线（TRIX）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_TRIX15</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">TRIX</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
    
    <span class="c1"># 计算平滑异同移动平均线（PPO）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_PPO</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">PPO</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">fastperiod</span><span class="o">=</span><span class="mi">12</span><span class="p">,</span> <span class="n">slowperiod</span><span class="o">=</span><span class="mi">26</span><span class="p">,</span> <span class="n">matype</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    
    <span class="c1"># 计算加权移动平均线（WMA）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_WMA20</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">WMA</span><span class="p">(</span><span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    
    <span class="c1"># 计算平均动向指数（ADX）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_ADX14</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">ADX</span><span class="p">(</span><span class="n">high</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">low</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    
    <span class="c1"># 计算价格通道指标（Donchian Channel）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_Donchian_upper</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">high</span><span class="p">[</span><span class="n">ticker</span><span class="p">].</span><span class="nf">rolling</span><span class="p">(</span><span class="n">window</span><span class="o">=</span><span class="mi">20</span><span class="p">).</span><span class="nf">max</span><span class="p">()</span>
    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_Donchian_lower</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">low</span><span class="p">[</span><span class="n">ticker</span><span class="p">].</span><span class="nf">rolling</span><span class="p">(</span><span class="n">window</span><span class="o">=</span><span class="mi">20</span><span class="p">).</span><span class="nf">min</span><span class="p">()</span>
    
    <span class="c1"># 计算累积/派发线（A/D Line）
</span>    <span class="n">factors</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">ticker</span><span class="si">}</span><span class="s">_AD</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ta</span><span class="p">.</span><span class="nc">AD</span><span class="p">(</span><span class="n">high</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">low</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">close</span><span class="p">[</span><span class="n">ticker</span><span class="p">],</span> <span class="n">volume</span><span class="p">[</span><span class="n">ticker</span><span class="p">])</span>

<span class="c1"># 删除空值
</span><span class="n">factors</span><span class="p">.</span><span class="nf">dropna</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># 标准化因子（Z-Score）
</span><span class="n">factors</span> <span class="o">=</span> <span class="n">factors</span><span class="p">.</span><span class="nf">apply</span><span class="p">(</span><span class="n">zscore</span><span class="p">)</span>

<span class="c1"># 计算相关性矩阵
</span><span class="n">correlation_matrix</span> <span class="o">=</span> <span class="n">factors</span><span class="p">.</span><span class="nf">corr</span><span class="p">().</span><span class="nf">abs</span><span class="p">()</span>

<span class="c1"># 去除高度相关的因子
# 设置相关性阈值
</span><span class="n">correlation_threshold</span> <span class="o">=</span> <span class="mf">0.8</span>
<span class="n">columns_to_remove</span> <span class="o">=</span> <span class="nf">set</span><span class="p">()</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">correlation_matrix</span><span class="p">.</span><span class="n">columns</span><span class="p">)):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nf">len</span><span class="p">(</span><span class="n">correlation_matrix</span><span class="p">.</span><span class="n">columns</span><span class="p">)):</span>
        <span class="k">if</span> <span class="n">correlation_matrix</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">correlation_threshold</span><span class="p">:</span>
            <span class="n">columns_to_remove</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="n">correlation_matrix</span><span class="p">.</span><span class="n">columns</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>

<span class="c1"># 保留不相关的因子
</span><span class="n">filtered_factors</span> <span class="o">=</span> <span class="n">factors</span><span class="p">.</span><span class="nf">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="n">columns_to_remove</span><span class="p">)</span>

<span class="c1"># 输出筛选后的因子
</span><span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">筛选后的因子列表：</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">filtered_factors</span><span class="p">.</span><span class="n">columns</span><span class="p">)</span>

<span class="c1"># 使用筛选后的因子构建模型（这里只是示例，你可以进一步应用这些因子）
# 比如可以应用线性回归、XGBoost等模型
</span></code></pre></div></div>]]></content><author><name></name></author><category term="financial" /><category term="option" /><summary type="html"><![CDATA[0. 因子筛选（Factor） 多因子模型在金融投资和风险管理中扮演着重要角色，通过多个因子的组合来解释和预测资产的收益和风险。因子处理流程是构建有效多因子模型的核心步骤，直接影响模型的准确性和稳定性。以下是对多因子模型因子处理流程的详细解释和介绍： 1. 因子选取（Factor Selection） 目的：选择具有解释力和预测能力的因子。 理论基础：基于金融经济学理论，如CAPM、APT等，选择有经济含义的因子。 实证分析：通过历史数据验证因子的有效性和稳健性。 数据可用性：确保因子数据的可获得性和可靠性。 2. 数据预处理（Data Preprocessing） 目的：提高数据质量，减少噪声和异常值的影响。 缺失值处理：填补或剔除缺失数据，常用方法包括均值填充、插值等。 去极值处理：处理异常值，防止其对模型造成偏差，常用方法有百分位数截断等。 数据平滑：减少短期波动，突出长期趋势。 3. 因子构建（Factor Construction） 目的：将原始数据转换为可用于模型的因子。 标准化处理：统一因子尺度，常用z-score标准化或分位数标准化。 正交化处理：消除因子间的相关性，提高模型的稳定性。 组合因子：根据需要组合多个基础因子形成新的复合因子。 4. 因子检验（Factor Testing） 目的：评估因子的有效性和稳健性。 相关性分析：检查因子与目标变量之间的相关性。 多重共线性检测：防止因子间高度相关导致模型不稳定。 时间稳定性检验：确保因子在不同时间段均保持有效。 5. 因子优化（Factor Optimization） 目的：优化因子权重和组合，提高模型性能。 权重确定：根据因子的历史表现和风险特征，分配适当的权重。 回归分析：使用多元回归模型确定因子的边际贡献。 机器学习方法：如LASSO、岭回归等用于因子选择和权重优化。 6. 组合构建（Portfolio Construction） 目的：根据优化后的因子构建投资组合。 优化算法：使用均值-方差模型、风险平价模型等方法进行组合优化。 约束条件：考虑实际投资中的限制，如仓位限制、交易成本等。 再平衡策略：制定定期或条件触发的组合调整策略。 7. 风险管理（Risk Management） 目的：监控和控制投资组合的风险。 风险指标计算：如VaR（在险价值）、CVaR（条件在险价值）等。 压力测试：模拟极端市场条件下组合的表现。 对冲策略：使用衍生品或其他工具对冲特定风险。 8. 绩效评估（Performance Evaluation） 目的：评估模型和组合的实际表现。 绝对收益指标：如年化收益率、夏普比率等。 相对收益指标：与基准指数或竞争策略进行比较。 因子贡献分析：评估各因子对整体收益的贡献度。 9. 模型维护与更新（Model Maintenance and Update） 目的：确保模型始终适应市场变化。 定期检验：定期重新评估因子的有效性。 模型更新：根据新数据和市场趋势，更新模型参数和结构。 持续优化：应用新的技术和方法，如深度学习等，提高模型性能。 10. 文档记录与合规（Documentation and Compliance） 目的：确保模型开发和应用过程的透明度和合规性。 详细记录：保存因子选择、模型构建、测试结果等所有步骤的记录。 合规审查：确保模型符合监管要求和内部合规政策。 透明沟通：与相关利益方沟通模型的方法和结果。 总结： 多因子模型的因子处理流程是一个系统而循环的过程，需要在每个环节进行细致的分析和优化。 通过科学的方法和严谨的流程，可以构建出具有预测能力和稳健性的多因子模型，为投资决策和风险管理提供有力支持。 import pandas as pd import numpy as np import yfinance as yf from scipy.stats import zscore import talib as ta # 获取数据 tickers = ['AAPL', 'MSFT', 'GOOGL'] # 示例股票代码，可以替换成你的标的 data = yf.download(tickers, start="2020-01-01", end="2023-01-01") close = data['Adj Close'] high = data['High'] low = data['Low'] volume = data['Volume'] # 生成技术分析因子 factors = pd.DataFrame(index=data.index) # 示例技术因子：移动平均、相对强弱指数(RSI)、布林带 for ticker in tickers: factors[f'{ticker}_SMA20'] = ta.SMA(close[ticker], timeperiod=20) factors[f'{ticker}_RSI14'] = ta.RSI(close[ticker], timeperiod=14) factors[f'{ticker}_BB_upper'], factors[f'{ticker}_BB_middle'], factors[f'{ticker}_BB_lower'] = ta.BBANDS(close[ticker], timeperiod=20, nbdevup=2, nbdevdn=2, matype=0) # 计算简单移动平均线（SMA） factors[f'{ticker}_SMA20'] = ta.SMA(close[ticker], timeperiod=20) factors[f'{ticker}_SMA50'] = ta.SMA(close[ticker], timeperiod=50) # 计算指数移动平均线（EMA） factors[f'{ticker}_EMA20'] = ta.EMA(close[ticker], timeperiod=20) factors[f'{ticker}_EMA50'] = ta.EMA(close[ticker], timeperiod=50) # 计算相对强弱指数（RSI） factors[f'{ticker}_RSI14'] = ta.RSI(close[ticker], timeperiod=14) # 计算布林带（Bollinger Bands） upperband, middleband, lowerband = ta.BBANDS( close[ticker], timeperiod=20, nbdevup=2, nbdevdn=2, matype=0) factors[f'{ticker}_BB_upper'] = upperband factors[f'{ticker}_BB_middle'] = middleband factors[f'{ticker}_BB_lower'] = lowerband # 计算移动平均收敛散度（MACD） macd, macdsignal, macdhist = ta.MACD( close[ticker], fastperiod=12, slowperiod=26, signalperiod=9) factors[f'{ticker}_MACD'] = macd factors[f'{ticker}_MACD_signal'] = macdsignal factors[f'{ticker}_MACD_hist'] = macdhist # 计算随机指标（Stochastic Oscillator） slowk, slowd = ta.STOCH( high[ticker], low[ticker], close[ticker], fastk_period=14, slowk_period=3, slowk_matype=0, slowd_period=3, slowd_matype=0) factors[f'{ticker}_Stoch_slowk'] = slowk factors[f'{ticker}_Stoch_slowd'] = slowd # 计算平均真实波幅（ATR） factors[f'{ticker}_ATR14'] = ta.ATR( high[ticker], low[ticker], close[ticker], timeperiod=14) # 计算威廉姆斯指标（Williams %R） factors[f'{ticker}_WilliamsR14'] = ta.WILLR( high[ticker], low[ticker], close[ticker], timeperiod=14) # 计算动量指标（Momentum） factors[f'{ticker}_Momentum10'] = ta.MOM(close[ticker], timeperiod=10) # 计算商品通道指数（CCI） factors[f'{ticker}_CCI14'] = ta.CCI( high[ticker], low[ticker], close[ticker], timeperiod=14) # 计算三重指数平滑平均线（TRIX） factors[f'{ticker}_TRIX15'] = ta.TRIX(close[ticker], timeperiod=15) # 计算平滑异同移动平均线（PPO） factors[f'{ticker}_PPO'] = ta.PPO(close[ticker], fastperiod=12, slowperiod=26, matype=0) # 计算加权移动平均线（WMA） factors[f'{ticker}_WMA20'] = ta.WMA(close[ticker], timeperiod=20) # 计算平均动向指数（ADX） factors[f'{ticker}_ADX14'] = ta.ADX(high[ticker], low[ticker], close[ticker], timeperiod=14) # 计算价格通道指标（Donchian Channel） factors[f'{ticker}_Donchian_upper'] = high[ticker].rolling(window=20).max() factors[f'{ticker}_Donchian_lower'] = low[ticker].rolling(window=20).min() # 计算累积/派发线（A/D Line） factors[f'{ticker}_AD'] = ta.AD(high[ticker], low[ticker], close[ticker], volume[ticker]) # 删除空值 factors.dropna(inplace=True) # 标准化因子（Z-Score） factors = factors.apply(zscore) # 计算相关性矩阵 correlation_matrix = factors.corr().abs() # 去除高度相关的因子 # 设置相关性阈值 correlation_threshold = 0.8 columns_to_remove = set() for i in range(len(correlation_matrix.columns)): for j in range(i+1, len(correlation_matrix.columns)): if correlation_matrix.iloc[i, j] &gt; correlation_threshold: columns_to_remove.add(correlation_matrix.columns[j]) # 保留不相关的因子 filtered_factors = factors.drop(columns=columns_to_remove) # 输出筛选后的因子 print("筛选后的因子列表：") print(filtered_factors.columns) # 使用筛选后的因子构建模型（这里只是示例，你可以进一步应用这些因子） # 比如可以应用线性回归、XGBoost等模型]]></summary></entry><entry><title type="html">volatility</title><link href="http://localhost:4000/financial/volatilly/volatilly/" rel="alternate" type="text/html" title="volatility" /><published>2024-10-25T11:24:29+08:00</published><updated>2024-10-25T11:24:29+08:00</updated><id>http://localhost:4000/financial/volatilly/volatilly</id><content type="html" xml:base="http://localhost:4000/financial/volatilly/volatilly/"><![CDATA[<script>
  MathJax = {
    tex: {
      inlineMath: [['$', '$'], ['\\(', '\\)']],
      displayMath: [['$$', '$$'], ['\\[', '\\]']]
    }
  };
</script>

<script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

<p>call 与 put 在相同的执行价格 K , T 其波动率一样</p>

<p>波动率微笑定义为隐含波动率与 <code class="language-plaintext highlighter-rouge">K/So</code> <code class="language-plaintext highlighter-rouge">K/Fo</code> , $\Delta$ 之间关系</p>

<p>问题 : 每个点都是一份合约 ?</p>

<p>有了市场上的波动率就通过插值得到非标准期限的波动率</p>

<p>或者通过市场拟合后的 <code class="language-plaintext highlighter-rouge">heston model</code> , <code class="language-plaintext highlighter-rouge">bates model</code> , <code class="language-plaintext highlighter-rouge">sabr model</code> 方法</p>

<p>以下是市场的波动率的3D图形</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">pt</span>
<span class="kn">from</span> <span class="n">mpl_toolkits.mplot3d</span> <span class="kn">import</span> <span class="n">Axes3D</span>

<span class="c1"># 您提供的数据
</span><span class="n">vol</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([[</span><span class="mf">14.2</span><span class="p">,</span><span class="mf">13.0</span><span class="p">,</span><span class="mf">12.0</span><span class="p">,</span><span class="mf">13.1</span><span class="p">,</span><span class="mf">14.5</span><span class="p">],</span>
                <span class="p">[</span><span class="mf">14.0</span><span class="p">,</span><span class="mf">13.0</span><span class="p">,</span><span class="mf">12.0</span><span class="p">,</span><span class="mf">13.1</span><span class="p">,</span><span class="mf">14.2</span><span class="p">],</span>
                <span class="p">[</span><span class="mf">14.1</span><span class="p">,</span><span class="mf">13.3</span><span class="p">,</span><span class="mf">12.5</span><span class="p">,</span><span class="mf">13.4</span><span class="p">,</span><span class="mf">14.3</span><span class="p">],</span>
                <span class="p">[</span><span class="mf">14.7</span><span class="p">,</span><span class="mf">14.0</span><span class="p">,</span><span class="mf">13.5</span><span class="p">,</span><span class="mf">14.0</span><span class="p">,</span><span class="mf">14.8</span><span class="p">],</span>
                <span class="p">[</span><span class="mf">15.0</span><span class="p">,</span><span class="mf">14.4</span><span class="p">,</span><span class="mf">14.0</span><span class="p">,</span><span class="mf">14.5</span><span class="p">,</span><span class="mf">15.1</span><span class="p">],</span>
                <span class="p">[</span><span class="mf">14.8</span><span class="p">,</span><span class="mf">14.6</span><span class="p">,</span><span class="mf">14.4</span><span class="p">,</span><span class="mf">14.7</span><span class="p">,</span><span class="mf">15.0</span><span class="p">]</span>
                <span class="p">])</span>

<span class="n">T</span><span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="mi">1</span><span class="o">/</span><span class="mi">12</span><span class="p">,</span><span class="mi">3</span><span class="o">/</span><span class="mi">12</span><span class="p">,</span><span class="mf">0.5</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span>

<span class="c1"># 假设的行权价数组（根据数据的列数）
</span><span class="n">K</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="mi">80</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">110</span><span class="p">,</span> <span class="mi">120</span><span class="p">])</span> <span class="o">/</span> <span class="mi">100</span>

<span class="c1"># 创建网格
</span><span class="n">K_grid</span><span class="p">,</span> <span class="n">T_grid</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">meshgrid</span><span class="p">(</span><span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">)</span>

<span class="c1"># 绘制3D图形
</span><span class="n">fig</span> <span class="o">=</span> <span class="n">pt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="nf">add_subplot</span><span class="p">(</span><span class="mi">111</span><span class="p">,</span> <span class="n">projection</span><span class="o">=</span><span class="sh">'</span><span class="s">3d</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># 将波动率转换为浮点数并除以100以表示为小数
</span><span class="n">vol_float</span> <span class="o">=</span> <span class="n">vol</span><span class="p">.</span><span class="nf">astype</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">float64</span><span class="p">)</span>

<span class="n">surf</span> <span class="o">=</span> <span class="n">ax</span><span class="p">.</span><span class="nf">plot_surface</span><span class="p">(</span><span class="n">K_grid</span><span class="p">,</span> <span class="n">T_grid</span><span class="p">,</span> <span class="n">vol_float</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">viridis</span><span class="sh">'</span><span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="nf">set_xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">K/So</span><span class="sh">'</span><span class="p">,</span> <span class="n">labelpad</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">T(years)</span><span class="sh">'</span><span class="p">,</span> <span class="n">labelpad</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_zlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">implied volatility(%)</span><span class="sh">'</span><span class="p">,</span> <span class="n">labelpad</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="sh">'</span><span class="s">volatility smile</span><span class="sh">'</span><span class="p">,</span> <span class="n">pad</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>

<span class="n">fig</span><span class="p">.</span><span class="nf">colorbar</span><span class="p">(</span><span class="n">surf</span><span class="p">,</span> <span class="n">shrink</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">aspect</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>

<span class="n">pt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="financial" /><category term="volatilly" /><summary type="html"><![CDATA[call 与 put 在相同的执行价格 K , T 其波动率一样 波动率微笑定义为隐含波动率与 K/So K/Fo , $\Delta$ 之间关系 问题 : 每个点都是一份合约 ? 有了市场上的波动率就通过插值得到非标准期限的波动率 或者通过市场拟合后的 heston model , bates model , sabr model 方法 以下是市场的波动率的3D图形 import numpy as np import matplotlib.pyplot as pt from mpl_toolkits.mplot3d import Axes3D # 您提供的数据 vol = np.array([[14.2,13.0,12.0,13.1,14.5], [14.0,13.0,12.0,13.1,14.2], [14.1,13.3,12.5,13.4,14.3], [14.7,14.0,13.5,14.0,14.8], [15.0,14.4,14.0,14.5,15.1], [14.8,14.6,14.4,14.7,15.0] ]) T= np.array([1/12,3/12,0.5,1,2,5]) # 假设的行权价数组（根据数据的列数） K = np.array([80, 90, 100, 110, 120]) / 100 # 创建网格 K_grid, T_grid = np.meshgrid(K, T) # 绘制3D图形 fig = pt.figure(figsize=(12,8)) ax = fig.add_subplot(111, projection='3d') # 将波动率转换为浮点数并除以100以表示为小数 vol_float = vol.astype(np.float64) surf = ax.plot_surface(K_grid, T_grid, vol_float, cmap='viridis') ax.set_xlabel('K/So', labelpad=15) ax.set_ylabel('T(years)', labelpad=15) ax.set_zlabel('implied volatility(%)', labelpad=15) ax.set_title('volatility smile', pad=20) fig.colorbar(surf, shrink=0.5, aspect=5) pt.show()]]></summary></entry><entry><title type="html">option pricing</title><link href="http://localhost:4000/financial/option/option/" rel="alternate" type="text/html" title="option pricing" /><published>2024-10-24T11:24:29+08:00</published><updated>2024-10-24T11:24:29+08:00</updated><id>http://localhost:4000/financial/option/option</id><content type="html" xml:base="http://localhost:4000/financial/option/option/"><![CDATA[<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="n">scipy.stats</span> <span class="kn">import</span> <span class="n">norm</span>

<span class="k">class</span> <span class="nc">black_scholes</span> <span class="p">:</span> 
    <span class="k">def</span> <span class="nf">__d1</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">S</span><span class="p">,</span><span class="n">K</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">sigma</span><span class="p">):</span>
        <span class="nf">return </span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="n">S</span> <span class="o">/</span> <span class="n">K</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">r</span> <span class="o">-</span> <span class="n">q</span> <span class="o">+</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="n">sigma</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="n">T</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">sigma</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">T</span><span class="p">))</span>
    
    <span class="k">def</span> <span class="nf">__d2</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">S</span><span class="p">,</span><span class="n">K</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">sigma</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="nf">__d1</span><span class="p">(</span><span class="n">S</span><span class="p">,</span><span class="n">K</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">sigma</span><span class="p">)</span> <span class="o">-</span> <span class="n">sigma</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">T</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">S</span><span class="p">,</span><span class="n">K</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">sigma</span><span class="p">):</span>
        <span class="n">d1</span> <span class="p">,</span> <span class="n">d2</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="nf">__d1</span><span class="p">(</span><span class="n">S</span><span class="p">,</span><span class="n">K</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">sigma</span><span class="p">)</span> <span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="nf">__d2</span><span class="p">(</span><span class="n">S</span><span class="p">,</span><span class="n">K</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">sigma</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">S</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">q</span><span class="o">*</span><span class="n">T</span><span class="p">)</span> <span class="o">*</span> <span class="n">norm</span><span class="p">.</span><span class="nf">cdf</span><span class="p">(</span><span class="n">d1</span><span class="p">)</span> <span class="o">-</span> <span class="n">K</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">)</span> <span class="o">*</span> <span class="n">norm</span><span class="p">.</span><span class="nf">cdf</span><span class="p">(</span><span class="n">d2</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">put</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">S</span><span class="p">,</span><span class="n">K</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">sigma</span><span class="p">):</span>
        <span class="n">d1</span> <span class="p">,</span> <span class="n">d2</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="nf">__d1</span><span class="p">(</span><span class="n">S</span><span class="p">,</span><span class="n">K</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">sigma</span><span class="p">)</span> <span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="nf">__d2</span><span class="p">(</span><span class="n">S</span><span class="p">,</span><span class="n">K</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">sigma</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">K</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span> <span class="o">*</span> <span class="n">T</span><span class="p">)</span> <span class="o">*</span> <span class="n">norm</span><span class="p">.</span><span class="nf">cdf</span><span class="p">(</span><span class="o">-</span><span class="n">d2</span><span class="p">)</span> <span class="o">-</span> <span class="n">S</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">q</span> <span class="o">*</span> <span class="n">T</span><span class="p">)</span> <span class="o">*</span> <span class="n">norm</span><span class="p">.</span><span class="nf">cdf</span><span class="p">(</span><span class="o">-</span><span class="n">d1</span><span class="p">)</span>
</code></pre></div></div>

<p>除了<code class="language-plaintext highlighter-rouge">black shcoles model</code>以外还有其他可以对期权定价的方法</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="k">class</span> <span class="nc">binomial_tree_option</span> <span class="p">:</span>

    <span class="k">def</span> <span class="nf">put</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">steps</span><span class="p">):</span>
        <span class="n">dt</span> <span class="o">=</span> <span class="n">T</span> <span class="o">/</span> <span class="n">steps</span>  <span class="c1"># 每一步的时间间隔
</span>        <span class="n">u</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="n">sigma</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">dt</span><span class="p">))</span>  <span class="c1"># 价格上升的比例
</span>        <span class="n">d</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="n">u</span>  <span class="c1"># 价格下降的比例
</span>        <span class="n">p</span> <span class="o">=</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="n">r</span> <span class="o">*</span> <span class="n">dt</span><span class="p">)</span> <span class="o">-</span> <span class="n">d</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">u</span> <span class="o">-</span> <span class="n">d</span><span class="p">)</span>  <span class="c1"># 风险中性概率
</span>
        <span class="n">prices</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="n">steps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">steps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">))</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">steps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
            <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
                <span class="n">prices</span><span class="p">[</span><span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">S</span> <span class="o">*</span> <span class="p">(</span><span class="n">u</span> <span class="o">**</span> <span class="n">j</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">d</span> <span class="o">**</span> <span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="n">j</span><span class="p">))</span>

        <span class="n">option_prices</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="n">steps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">steps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">))</span>
        <span class="n">option_prices</span><span class="p">[:,</span> <span class="n">steps</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">maximum</span><span class="p">(</span><span class="n">K</span> <span class="o">-</span> <span class="n">prices</span><span class="p">[:,</span> <span class="n">steps</span><span class="p">],</span> <span class="mi">0</span><span class="p">)</span>

        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">steps</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
            <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
                <span class="n">option_prices</span><span class="p">[</span><span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span> <span class="o">*</span> <span class="n">dt</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">p</span> <span class="o">*</span> <span class="n">option_prices</span><span class="p">[</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">p</span><span class="p">)</span> <span class="o">*</span> <span class="n">option_prices</span><span class="p">[</span><span class="n">j</span><span class="p">,</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">])</span>

        <span class="k">return</span> <span class="n">option_prices</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>

    <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">steps</span><span class="p">):</span>
        <span class="n">dt</span> <span class="o">=</span> <span class="n">T</span> <span class="o">/</span> <span class="n">steps</span>  <span class="c1"># 每一步的时间间隔
</span>        <span class="n">u</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="n">sigma</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">dt</span><span class="p">))</span>  <span class="c1"># 价格上升的比例
</span>        <span class="n">d</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="n">u</span>  <span class="c1"># 价格下降的比例
</span>        <span class="n">p</span> <span class="o">=</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="n">r</span> <span class="o">*</span> <span class="n">dt</span><span class="p">)</span> <span class="o">-</span> <span class="n">d</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">u</span> <span class="o">-</span> <span class="n">d</span><span class="p">)</span>  <span class="c1"># 风险中性概率
</span>
        <span class="n">prices</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="n">steps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">steps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">))</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">steps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
            <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
                <span class="n">prices</span><span class="p">[</span><span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">S</span> <span class="o">*</span> <span class="p">(</span><span class="n">u</span> <span class="o">**</span> <span class="n">j</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">d</span> <span class="o">**</span> <span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="n">j</span><span class="p">))</span>

        <span class="n">option_prices</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="n">steps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">steps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">))</span>
        <span class="n">option_prices</span><span class="p">[:,</span> <span class="n">steps</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">maximum</span><span class="p">(</span><span class="n">prices</span><span class="p">[:,</span> <span class="n">steps</span><span class="p">]</span> <span class="o">-</span> <span class="n">K</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">steps</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
            <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
                <span class="n">option_prices</span><span class="p">[</span><span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span> <span class="o">*</span> <span class="n">dt</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">p</span> <span class="o">*</span> <span class="n">option_prices</span><span class="p">[</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">p</span><span class="p">)</span> <span class="o">*</span> <span class="n">option_prices</span><span class="p">[</span><span class="n">j</span><span class="p">,</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">])</span>

        <span class="k">return</span> <span class="n">option_prices</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>

<span class="c1"># 示例：计算看涨期权价格
</span><span class="n">S</span> <span class="o">=</span> <span class="mi">100</span>  <span class="c1"># 标的资产当前价格
</span><span class="n">K</span> <span class="o">=</span> <span class="mi">100</span>  <span class="c1"># 行权价
</span><span class="n">T</span> <span class="o">=</span> <span class="mi">1</span>    <span class="c1"># 距离到期时间 1 年
</span><span class="n">r</span> <span class="o">=</span> <span class="mf">0.05</span> <span class="c1"># 无风险利率 5%
</span><span class="n">sigma</span> <span class="o">=</span> <span class="mf">0.2</span> <span class="c1"># 波动率 20%
</span><span class="n">steps</span> <span class="o">=</span> <span class="mi">100</span> <span class="c1"># 二叉树步数
</span>
<span class="n">call_price</span> <span class="o">=</span> <span class="nf">binomial_tree_option</span><span class="p">().</span><span class="nf">call</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">steps</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">call_price</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="k">class</span> <span class="nc">monte_carlo_option_price</span> <span class="p">:</span>
    <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">simulations</span><span class="p">):</span>
        <span class="n">dt</span> <span class="o">=</span> <span class="n">T</span>
        <span class="n">payoffs</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">(</span><span class="n">simulations</span><span class="p">)</span>

        <span class="c1"># 模拟标的资产价格路径
</span>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">simulations</span><span class="p">):</span>
            <span class="n">ST</span> <span class="o">=</span> <span class="n">S</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">((</span><span class="n">r</span> <span class="o">-</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="n">dt</span> <span class="o">+</span> <span class="n">sigma</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">dt</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">randn</span><span class="p">())</span>
            <span class="n">payoffs</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">ST</span> <span class="o">-</span> <span class="n">K</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

        <span class="c1"># 计算期权价格
</span>        <span class="n">option_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span> <span class="o">*</span> <span class="n">T</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">payoffs</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">option_price</span>
    
    <span class="k">def</span> <span class="nf">put</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">simulations</span><span class="p">):</span>
        <span class="n">dt</span> <span class="o">=</span> <span class="n">T</span>
        <span class="n">payoffs</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">(</span><span class="n">simulations</span><span class="p">)</span>

        <span class="c1"># 模拟标的资产价格路径
</span>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">simulations</span><span class="p">):</span>
            <span class="n">ST</span> <span class="o">=</span> <span class="n">S</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">((</span><span class="n">r</span> <span class="o">-</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="n">dt</span> <span class="o">+</span> <span class="n">sigma</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">dt</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">randn</span><span class="p">())</span>
            <span class="n">payoffs</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">K</span> <span class="o">-</span> <span class="n">ST</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

        <span class="c1"># 计算期权价格
</span>        <span class="n">option_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span> <span class="o">*</span> <span class="n">T</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">payoffs</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">option_price</span>

<span class="c1"># 示例：计算看涨期权价格
</span><span class="n">S</span> <span class="o">=</span> <span class="mi">100</span>  <span class="c1"># 标的资产当前价格
</span><span class="n">K</span> <span class="o">=</span> <span class="mi">100</span>  <span class="c1"># 行权价
</span><span class="n">T</span> <span class="o">=</span> <span class="mi">1</span>    <span class="c1"># 距离到期时间 1 年
</span><span class="n">r</span> <span class="o">=</span> <span class="mf">0.05</span> <span class="c1"># 无风险利率 5%
</span><span class="n">sigma</span> <span class="o">=</span> <span class="mf">0.2</span> <span class="c1"># 波动率 20%
</span><span class="n">simulations</span> <span class="o">=</span> <span class="mi">10000</span> <span class="c1"># 模拟次数
</span>
<span class="n">call_price</span> <span class="o">=</span> <span class="nf">monte_carlo_option_price</span><span class="p">().</span><span class="nf">call</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">simulations</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">call_price</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<p>利用数值分析计算<code class="language-plaintext highlighter-rouge">Delta</code></p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="n">scipy.stats</span> <span class="kn">import</span> <span class="n">norm</span>

<span class="c1"># Black-Scholes 期权定价公式
</span><span class="k">def</span> <span class="nf">black_scholes</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="o">=</span><span class="sh">"</span><span class="s">call</span><span class="sh">"</span><span class="p">):</span>
    <span class="n">d1</span> <span class="o">=</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="n">S</span> <span class="o">/</span> <span class="n">K</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">r</span> <span class="o">+</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="n">sigma</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="n">T</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">sigma</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">T</span><span class="p">))</span>
    <span class="n">d2</span> <span class="o">=</span> <span class="n">d1</span> <span class="o">-</span> <span class="n">sigma</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">T</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">option_type</span> <span class="o">==</span> <span class="sh">"</span><span class="s">call</span><span class="sh">"</span><span class="p">:</span>
        <span class="n">price</span> <span class="o">=</span> <span class="n">S</span> <span class="o">*</span> <span class="n">norm</span><span class="p">.</span><span class="nf">cdf</span><span class="p">(</span><span class="n">d1</span><span class="p">)</span> <span class="o">-</span> <span class="n">K</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span> <span class="o">*</span> <span class="n">T</span><span class="p">)</span> <span class="o">*</span> <span class="n">norm</span><span class="p">.</span><span class="nf">cdf</span><span class="p">(</span><span class="n">d2</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">option_type</span> <span class="o">==</span> <span class="sh">"</span><span class="s">put</span><span class="sh">"</span><span class="p">:</span>
        <span class="n">price</span> <span class="o">=</span> <span class="n">K</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span> <span class="o">*</span> <span class="n">T</span><span class="p">)</span> <span class="o">*</span> <span class="n">norm</span><span class="p">.</span><span class="nf">cdf</span><span class="p">(</span><span class="o">-</span><span class="n">d2</span><span class="p">)</span> <span class="o">-</span> <span class="n">S</span> <span class="o">*</span> <span class="n">norm</span><span class="p">.</span><span class="nf">cdf</span><span class="p">(</span><span class="o">-</span><span class="n">d1</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">price</span>

<span class="c1"># 差异法计算 Delta
</span><span class="k">def</span> <span class="nf">delta_fd</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="o">=</span><span class="sh">"</span><span class="s">call</span><span class="sh">"</span><span class="p">,</span> <span class="n">epsilon</span><span class="o">=</span><span class="mf">1e-4</span><span class="p">):</span>
    <span class="n">price_up</span> <span class="o">=</span> <span class="nf">black_scholes</span><span class="p">(</span><span class="n">S</span> <span class="o">+</span> <span class="n">epsilon</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="p">)</span>
    <span class="n">price_down</span> <span class="o">=</span> <span class="nf">black_scholes</span><span class="p">(</span><span class="n">S</span> <span class="o">-</span> <span class="n">epsilon</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="p">)</span>
    <span class="n">delta</span> <span class="o">=</span> <span class="p">(</span><span class="n">price_up</span> <span class="o">-</span> <span class="n">price_down</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">epsilon</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">delta</span>

<span class="c1"># 差异法计算 Gamma
</span><span class="k">def</span> <span class="nf">gamma_fd</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="o">=</span><span class="sh">"</span><span class="s">call</span><span class="sh">"</span><span class="p">,</span> <span class="n">epsilon</span><span class="o">=</span><span class="mf">1e-4</span><span class="p">):</span>
    <span class="n">price_up</span> <span class="o">=</span> <span class="nf">black_scholes</span><span class="p">(</span><span class="n">S</span> <span class="o">+</span> <span class="n">epsilon</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="p">)</span>
    <span class="n">price_down</span> <span class="o">=</span> <span class="nf">black_scholes</span><span class="p">(</span><span class="n">S</span> <span class="o">-</span> <span class="n">epsilon</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="p">)</span>
    <span class="n">price_current</span> <span class="o">=</span> <span class="nf">black_scholes</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="p">)</span>
    <span class="n">gamma</span> <span class="o">=</span> <span class="p">(</span><span class="n">price_up</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">price_current</span> <span class="o">+</span> <span class="n">price_down</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">epsilon</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">gamma</span>

<span class="c1"># 差异法计算 Theta
</span><span class="k">def</span> <span class="nf">theta_fd</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="o">=</span><span class="sh">"</span><span class="s">call</span><span class="sh">"</span><span class="p">,</span> <span class="n">epsilon</span><span class="o">=</span><span class="mf">1e-4</span><span class="p">):</span>
    <span class="n">price_today</span> <span class="o">=</span> <span class="nf">black_scholes</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="p">)</span>
    <span class="n">price_tomorrow</span> <span class="o">=</span> <span class="nf">black_scholes</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span> <span class="o">-</span> <span class="n">epsilon</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="p">)</span>
    <span class="n">theta</span> <span class="o">=</span> <span class="p">(</span><span class="n">price_tomorrow</span> <span class="o">-</span> <span class="n">price_today</span><span class="p">)</span> <span class="o">/</span> <span class="n">epsilon</span>
    <span class="k">return</span> <span class="n">theta</span>

<span class="c1"># 差异法计算 Vega
</span><span class="k">def</span> <span class="nf">vega_fd</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="o">=</span><span class="sh">"</span><span class="s">call</span><span class="sh">"</span><span class="p">,</span> <span class="n">epsilon</span><span class="o">=</span><span class="mf">1e-4</span><span class="p">):</span>
    <span class="n">price_up</span> <span class="o">=</span> <span class="nf">black_scholes</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span> <span class="o">+</span> <span class="n">epsilon</span><span class="p">,</span> <span class="n">option_type</span><span class="p">)</span>
    <span class="n">price_down</span> <span class="o">=</span> <span class="nf">black_scholes</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span> <span class="o">-</span> <span class="n">epsilon</span><span class="p">,</span> <span class="n">option_type</span><span class="p">)</span>
    <span class="n">vega</span> <span class="o">=</span> <span class="p">(</span><span class="n">price_up</span> <span class="o">-</span> <span class="n">price_down</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">epsilon</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">vega</span>

<span class="c1"># 参数设置
</span><span class="n">S</span> <span class="o">=</span> <span class="mi">100</span>    <span class="c1"># 标的资产价格
</span><span class="n">K</span> <span class="o">=</span> <span class="mi">100</span>    <span class="c1"># 行权价格
</span><span class="n">T</span> <span class="o">=</span> <span class="mi">1</span>      <span class="c1"># 到期时间
</span><span class="n">r</span> <span class="o">=</span> <span class="mf">0.05</span>   <span class="c1"># 无风险利率
</span><span class="n">sigma</span> <span class="o">=</span> <span class="mf">0.2</span>  <span class="c1"># 波动率
</span>
<span class="c1"># 计算希腊字母
</span><span class="n">delta_val</span> <span class="o">=</span> <span class="nf">delta_fd</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="o">=</span><span class="sh">"</span><span class="s">call</span><span class="sh">"</span><span class="p">)</span>
<span class="n">gamma_val</span> <span class="o">=</span> <span class="nf">gamma_fd</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="o">=</span><span class="sh">"</span><span class="s">call</span><span class="sh">"</span><span class="p">)</span>
<span class="n">theta_val</span> <span class="o">=</span> <span class="nf">theta_fd</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="o">=</span><span class="sh">"</span><span class="s">call</span><span class="sh">"</span><span class="p">)</span>
<span class="n">vega_val</span> <span class="o">=</span> <span class="nf">vega_fd</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">option_type</span><span class="o">=</span><span class="sh">"</span><span class="s">call</span><span class="sh">"</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Delta (差异法): </span><span class="si">{</span><span class="n">delta_val</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Gamma (差异法): </span><span class="si">{</span><span class="n">gamma_val</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Theta (差异法): </span><span class="si">{</span><span class="n">theta_val</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Vega (差异法): </span><span class="si">{</span><span class="n">vega_val</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="financial" /><category term="option" /><summary type="html"><![CDATA[import numpy as np from scipy.stats import norm class black_scholes : def __d1(self,S,K,T,r,q,sigma): return (np.log(S / K) + (r - q + 0.5 * sigma ** 2) * T) / (sigma * np.sqrt(T)) def __d2(self,S,K,T,r,q,sigma): return self.__d1(S,K,T,r,q,sigma) - sigma * np.sqrt(T) def call(self,S,K,T,r,q,sigma): d1 , d2 = self.__d1(S,K,T,r,q,sigma) , self.__d2(S,K,T,r,q,sigma) return S * np.exp(-q*T) * norm.cdf(d1) - K * np.exp(-r*T) * norm.cdf(d2) def put(self,S,K,T,r,q,sigma): d1 , d2 = self.__d1(S,K,T,r,q,sigma) , self.__d2(S,K,T,r,q,sigma) return K * np.exp(-r * T) * norm.cdf(-d2) - S * np.exp(-q * T) * norm.cdf(-d1) 除了black shcoles model以外还有其他可以对期权定价的方法 import numpy as np class binomial_tree_option : def put(S, K, T, r, sigma, steps): dt = T / steps # 每一步的时间间隔 u = np.exp(sigma * np.sqrt(dt)) # 价格上升的比例 d = 1 / u # 价格下降的比例 p = (np.exp(r * dt) - d) / (u - d) # 风险中性概率 prices = np.zeros((steps + 1, steps + 1)) for i in range(steps + 1): for j in range(i + 1): prices[j, i] = S * (u ** j) * (d ** (i - j)) option_prices = np.zeros((steps + 1, steps + 1)) option_prices[:, steps] = np.maximum(K - prices[:, steps], 0) for i in range(steps - 1, -1, -1): for j in range(i + 1): option_prices[j, i] = np.exp(-r * dt) * (p * option_prices[j + 1, i + 1] + (1 - p) * option_prices[j, i + 1]) return option_prices[0, 0] def call(S, K, T, r, sigma, steps): dt = T / steps # 每一步的时间间隔 u = np.exp(sigma * np.sqrt(dt)) # 价格上升的比例 d = 1 / u # 价格下降的比例 p = (np.exp(r * dt) - d) / (u - d) # 风险中性概率 prices = np.zeros((steps + 1, steps + 1)) for i in range(steps + 1): for j in range(i + 1): prices[j, i] = S * (u ** j) * (d ** (i - j)) option_prices = np.zeros((steps + 1, steps + 1)) option_prices[:, steps] = np.maximum(prices[:, steps] - K, 0) for i in range(steps - 1, -1, -1): for j in range(i + 1): option_prices[j, i] = np.exp(-r * dt) * (p * option_prices[j + 1, i + 1] + (1 - p) * option_prices[j, i + 1]) return option_prices[0, 0] # 示例：计算看涨期权价格 S = 100 # 标的资产当前价格 K = 100 # 行权价 T = 1 # 距离到期时间 1 年 r = 0.05 # 无风险利率 5% sigma = 0.2 # 波动率 20% steps = 100 # 二叉树步数 call_price = binomial_tree_option().call(S, K, T, r, sigma, steps) print(f"{call_price}") import numpy as np class monte_carlo_option_price : def call(self,S, K, T, r, sigma, simulations): dt = T payoffs = np.zeros(simulations) # 模拟标的资产价格路径 for i in range(simulations): ST = S * np.exp((r - 0.5 * sigma**2) * dt + sigma * np.sqrt(dt) * np.random.randn()) payoffs[i] = max(ST - K, 0) # 计算期权价格 option_price = np.exp(-r * T) * np.mean(payoffs) return option_price def put(self,S, K, T, r, sigma, simulations): dt = T payoffs = np.zeros(simulations) # 模拟标的资产价格路径 for i in range(simulations): ST = S * np.exp((r - 0.5 * sigma**2) * dt + sigma * np.sqrt(dt) * np.random.randn()) payoffs[i] = max(K - ST, 0) # 计算期权价格 option_price = np.exp(-r * T) * np.mean(payoffs) return option_price # 示例：计算看涨期权价格 S = 100 # 标的资产当前价格 K = 100 # 行权价 T = 1 # 距离到期时间 1 年 r = 0.05 # 无风险利率 5% sigma = 0.2 # 波动率 20% simulations = 10000 # 模拟次数 call_price = monte_carlo_option_price().call(S, K, T, r, sigma, simulations) print(f"{call_price}") 利用数值分析计算Delta import numpy as np from scipy.stats import norm # Black-Scholes 期权定价公式 def black_scholes(S, K, T, r, sigma, option_type="call"): d1 = (np.log(S / K) + (r + 0.5 * sigma ** 2) * T) / (sigma * np.sqrt(T)) d2 = d1 - sigma * np.sqrt(T) if option_type == "call": price = S * norm.cdf(d1) - K * np.exp(-r * T) * norm.cdf(d2) elif option_type == "put": price = K * np.exp(-r * T) * norm.cdf(-d2) - S * norm.cdf(-d1) return price # 差异法计算 Delta def delta_fd(S, K, T, r, sigma, option_type="call", epsilon=1e-4): price_up = black_scholes(S + epsilon, K, T, r, sigma, option_type) price_down = black_scholes(S - epsilon, K, T, r, sigma, option_type) delta = (price_up - price_down) / (2 * epsilon) return delta # 差异法计算 Gamma def gamma_fd(S, K, T, r, sigma, option_type="call", epsilon=1e-4): price_up = black_scholes(S + epsilon, K, T, r, sigma, option_type) price_down = black_scholes(S - epsilon, K, T, r, sigma, option_type) price_current = black_scholes(S, K, T, r, sigma, option_type) gamma = (price_up - 2 * price_current + price_down) / (epsilon ** 2) return gamma # 差异法计算 Theta def theta_fd(S, K, T, r, sigma, option_type="call", epsilon=1e-4): price_today = black_scholes(S, K, T, r, sigma, option_type) price_tomorrow = black_scholes(S, K, T - epsilon, r, sigma, option_type) theta = (price_tomorrow - price_today) / epsilon return theta # 差异法计算 Vega def vega_fd(S, K, T, r, sigma, option_type="call", epsilon=1e-4): price_up = black_scholes(S, K, T, r, sigma + epsilon, option_type) price_down = black_scholes(S, K, T, r, sigma - epsilon, option_type) vega = (price_up - price_down) / (2 * epsilon) return vega # 参数设置 S = 100 # 标的资产价格 K = 100 # 行权价格 T = 1 # 到期时间 r = 0.05 # 无风险利率 sigma = 0.2 # 波动率 # 计算希腊字母 delta_val = delta_fd(S, K, T, r, sigma, option_type="call") gamma_val = gamma_fd(S, K, T, r, sigma, option_type="call") theta_val = theta_fd(S, K, T, r, sigma, option_type="call") vega_val = vega_fd(S, K, T, r, sigma, option_type="call") print(f"Delta (差异法): {delta_val}") print(f"Gamma (差异法): {gamma_val}") print(f"Theta (差异法): {theta_val}") print(f"Vega (差异法): {vega_val}")]]></summary></entry><entry><title type="html">nelson siegel model and svensson model</title><link href="http://localhost:4000/financial/bootstrapping/ns-svesson-bootstrapping/" rel="alternate" type="text/html" title="nelson siegel model and svensson model" /><published>2024-10-23T11:24:29+08:00</published><updated>2024-10-23T11:24:29+08:00</updated><id>http://localhost:4000/financial/bootstrapping/ns-svesson-bootstrapping</id><content type="html" xml:base="http://localhost:4000/financial/bootstrapping/ns-svesson-bootstrapping/"><![CDATA[<script>
  MathJax = {
    tex: {
      inlineMath: [['$', '$'], ['\\(', '\\)']],
      displayMath: [['$$', '$$'], ['\\[', '\\]']]
    }
  };
</script>

<script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="n">scipy.optimize</span> <span class="kn">import</span> <span class="n">curve_fit</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">pt</span>
<span class="kn">from</span> <span class="n">matplotlib</span> <span class="kn">import</span> <span class="n">style</span>
<span class="n">style</span><span class="p">.</span><span class="nf">use</span><span class="p">(</span><span class="sh">'</span><span class="s">ggplot</span><span class="sh">'</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">nelson_siegel</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">beta0</span><span class="p">,</span> <span class="n">beta1</span><span class="p">,</span> <span class="n">beta2</span><span class="p">,</span> <span class="n">lambd</span><span class="p">):</span>
    <span class="n">term1</span> <span class="o">=</span> <span class="n">beta0</span>
    <span class="n">term2</span> <span class="o">=</span> <span class="n">beta1</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">lambd</span> <span class="o">*</span> <span class="n">t</span><span class="p">))</span> <span class="o">/</span> <span class="p">(</span><span class="n">lambd</span> <span class="o">*</span> <span class="n">t</span><span class="p">)</span>
    <span class="n">term3</span> <span class="o">=</span> <span class="n">beta2</span> <span class="o">*</span> <span class="p">((</span><span class="mi">1</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">lambd</span> <span class="o">*</span> <span class="n">t</span><span class="p">))</span> <span class="o">/</span> <span class="p">(</span><span class="n">lambd</span> <span class="o">*</span> <span class="n">t</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">lambd</span> <span class="o">*</span> <span class="n">t</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">term1</span> <span class="o">+</span> <span class="n">term2</span> <span class="o">+</span> <span class="n">term3</span>

<span class="k">def</span> <span class="nf">svensson</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">beta0</span><span class="p">,</span> <span class="n">beta1</span><span class="p">,</span> <span class="n">beta2</span><span class="p">,</span> <span class="n">beta3</span><span class="p">,</span> <span class="n">lambd1</span><span class="p">,</span> <span class="n">lambd2</span><span class="p">):</span>
    <span class="n">term1</span> <span class="o">=</span> <span class="n">beta0</span>
    <span class="n">term2</span> <span class="o">=</span> <span class="n">beta1</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">lambd1</span> <span class="o">*</span> <span class="n">t</span><span class="p">))</span> <span class="o">/</span> <span class="p">(</span><span class="n">lambd1</span> <span class="o">*</span> <span class="n">t</span><span class="p">)</span>
    <span class="n">term3</span> <span class="o">=</span> <span class="n">beta2</span> <span class="o">*</span> <span class="p">((</span><span class="mi">1</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">lambd1</span> <span class="o">*</span> <span class="n">t</span><span class="p">))</span> <span class="o">/</span> <span class="p">(</span><span class="n">lambd1</span> <span class="o">*</span> <span class="n">t</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">lambd1</span> <span class="o">*</span> <span class="n">t</span><span class="p">))</span>
    <span class="n">term4</span> <span class="o">=</span> <span class="n">beta3</span> <span class="o">*</span> <span class="p">((</span><span class="mi">1</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">lambd2</span> <span class="o">*</span> <span class="n">t</span><span class="p">))</span> <span class="o">/</span> <span class="p">(</span><span class="n">lambd2</span> <span class="o">*</span> <span class="n">t</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">lambd2</span> <span class="o">*</span> <span class="n">t</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">term1</span> <span class="o">+</span> <span class="n">term2</span> <span class="o">+</span> <span class="n">term3</span> <span class="o">+</span> <span class="n">term4</span>

<span class="c1"># 生成模拟的市场数据
</span><span class="n">times</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="mf">0.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">])</span>  <span class="c1"># 期限 (年)
</span><span class="n">true_rates</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="mf">0.01</span><span class="p">,</span> <span class="mf">0.015</span><span class="p">,</span> <span class="mf">0.02</span><span class="p">,</span> <span class="mf">0.022</span><span class="p">,</span> <span class="mf">0.025</span><span class="p">,</span> <span class="mf">0.027</span><span class="p">,</span> <span class="mf">0.03</span><span class="p">,</span> <span class="mf">0.032</span><span class="p">,</span> <span class="mf">0.033</span><span class="p">,</span> <span class="mf">0.034</span><span class="p">])</span>  <span class="c1"># 模拟的市场利率
</span>
<span class="c1"># 初始猜测参数
</span><span class="n">initial_params_ns</span> <span class="o">=</span> <span class="p">[</span><span class="mf">0.03</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.02</span><span class="p">,</span> <span class="mf">0.02</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">]</span>  <span class="c1"># beta0, beta1, beta2, lambd
</span><span class="n">params_ns</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="nf">curve_fit</span><span class="p">(</span><span class="n">nelson_siegel</span><span class="p">,</span> <span class="n">times</span><span class="p">,</span> <span class="n">true_rates</span><span class="p">,</span> <span class="n">p0</span><span class="o">=</span><span class="n">initial_params_ns</span><span class="p">)</span>
<span class="n">fitted_ns_rates</span> <span class="o">=</span> <span class="nf">nelson_siegel</span><span class="p">(</span><span class="n">times</span><span class="p">,</span> <span class="o">*</span><span class="n">params_ns</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">nelson-Siegel params : </span><span class="sh">"</span><span class="p">,</span> <span class="n">params_ns</span><span class="p">)</span>

<span class="c1"># 初始猜测参数
</span><span class="n">initial_params_sv</span> <span class="o">=</span> <span class="p">[</span><span class="mf">0.03</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.02</span><span class="p">,</span> <span class="mf">0.02</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">]</span>  <span class="c1"># beta0, beta1, beta2, beta3, lambd1, lambd2
</span><span class="n">params_sv</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="nf">curve_fit</span><span class="p">(</span><span class="n">svensson</span><span class="p">,</span> <span class="n">times</span><span class="p">,</span> <span class="n">true_rates</span><span class="p">,</span> <span class="n">p0</span><span class="o">=</span><span class="n">initial_params_sv</span><span class="p">)</span>
<span class="n">fitted_sv_rates</span> <span class="o">=</span> <span class="nf">svensson</span><span class="p">(</span><span class="n">times</span><span class="p">,</span> <span class="o">*</span><span class="n">params_sv</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">svensson params : </span><span class="sh">"</span><span class="p">,</span> <span class="n">params_sv</span><span class="p">)</span>

<span class="c1"># 绘制拟合曲线
</span><span class="n">pt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">times</span><span class="p">,</span> <span class="n">true_rates</span><span class="p">,</span> <span class="sh">'</span><span class="s">o</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">"</span><span class="s">market value</span><span class="sh">"</span><span class="p">)</span>
<span class="n">pt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">times</span><span class="p">,</span> <span class="n">fitted_ns_rates</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">"</span><span class="s">nelson-Siegel</span><span class="sh">"</span><span class="p">)</span>
<span class="n">pt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">times</span><span class="p">,</span> <span class="n">fitted_sv_rates</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">"</span><span class="s">svensson</span><span class="sh">"</span><span class="p">)</span>
<span class="n">pt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">"</span><span class="s">time to maturity</span><span class="sh">"</span><span class="p">)</span>
<span class="n">pt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">"</span><span class="s">interest rate</span><span class="sh">"</span><span class="p">)</span>
<span class="n">pt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">"</span><span class="s">nelson-Siegel and svensson model opt</span><span class="sh">"</span><span class="p">)</span>
<span class="n">pt</span><span class="p">.</span><span class="nf">legend</span><span class="p">()</span>
<span class="n">pt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="financial" /><category term="bootstrapping" /><summary type="html"><![CDATA[import numpy as np from scipy.optimize import curve_fit import matplotlib.pyplot as pt from matplotlib import style style.use('ggplot') def nelson_siegel(t, beta0, beta1, beta2, lambd): term1 = beta0 term2 = beta1 * (1 - np.exp(-lambd * t)) / (lambd * t) term3 = beta2 * ((1 - np.exp(-lambd * t)) / (lambd * t) - np.exp(-lambd * t)) return term1 + term2 + term3 def svensson(t, beta0, beta1, beta2, beta3, lambd1, lambd2): term1 = beta0 term2 = beta1 * (1 - np.exp(-lambd1 * t)) / (lambd1 * t) term3 = beta2 * ((1 - np.exp(-lambd1 * t)) / (lambd1 * t) - np.exp(-lambd1 * t)) term4 = beta3 * ((1 - np.exp(-lambd2 * t)) / (lambd2 * t) - np.exp(-lambd2 * t)) return term1 + term2 + term3 + term4 # 生成模拟的市场数据 times = np.array([0.5, 1, 2, 3, 5, 7, 10, 15, 20, 30]) # 期限 (年) true_rates = np.array([0.01, 0.015, 0.02, 0.022, 0.025, 0.027, 0.03, 0.032, 0.033, 0.034]) # 模拟的市场利率 # 初始猜测参数 initial_params_ns = [0.03, -0.02, 0.02, 1.0] # beta0, beta1, beta2, lambd params_ns, _ = curve_fit(nelson_siegel, times, true_rates, p0=initial_params_ns) fitted_ns_rates = nelson_siegel(times, *params_ns) print("nelson-Siegel params : ", params_ns) # 初始猜测参数 initial_params_sv = [0.03, -0.02, 0.02, 0.01, 1.0, 3.0] # beta0, beta1, beta2, beta3, lambd1, lambd2 params_sv, _ = curve_fit(svensson, times, true_rates, p0=initial_params_sv) fitted_sv_rates = svensson(times, *params_sv) print("svensson params : ", params_sv) # 绘制拟合曲线 pt.plot(times, true_rates, 'o', label="market value") pt.plot(times, fitted_ns_rates, label="nelson-Siegel") pt.plot(times, fitted_sv_rates, label="svensson") pt.xlabel("time to maturity") pt.ylabel("interest rate") pt.title("nelson-Siegel and svensson model opt") pt.legend() pt.show()]]></summary></entry><entry><title type="html">以 SABR-LMM 模型進行利率衍生性金融商品評價之探討</title><link href="http://localhost:4000/financial/volatility/outline/review/paper001/" rel="alternate" type="text/html" title="以 SABR-LMM 模型進行利率衍生性金融商品評價之探討" /><published>2024-10-23T11:24:29+08:00</published><updated>2024-10-23T11:24:29+08:00</updated><id>http://localhost:4000/financial/volatility/outline/review/paper001</id><content type="html" xml:base="http://localhost:4000/financial/volatility/outline/review/paper001/"><![CDATA[<script type="text/javascript" async="" src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js">
</script>

<p><code class="language-plaintext highlighter-rouge">SABR-LMM</code></p>

<p>修正<code class="language-plaintext highlighter-rouge">LMM</code>的underlying 波动率假设过于简单</p>

<p>局部波动率缺点</p>

<ol>
  <li>
    <p>局部波动率模型假设市场的波动率是确定的，即与时间和资产价格变化相关联的波动率曲面是静态的。这意味着市场条件的变化无法动态反映在模型中，特别是在市场出现剧烈波动时，局部波动率模型无法捕捉到波动率的跳变行为。</p>
  </li>
  <li>
    <p>模型对市场异常事件或突然的波动变化的适应性较差。当市场中存在不确定性或波动率突然变化（如“波动率笑”的出现）时，局部波动率模型通常表现不佳，不能很好地拟合这些市场现象。这会导致在定价复杂衍生品时出现较大误差。</p>
  </li>
  <li>
    <p>局部波动率模型假设未来波动率与历史波动率一致，并且局部波动率曲线无法自适应调整以适应新的市场条件，这导致其在处理实际交易数据时表现出局限性。</p>
  </li>
  <li>
    <p>难以捕捉隐含波动率曲线的动态行为。局部波动率模型无法准确反映隐含波动率随时间推移的变化，特别是隐含波动率曲线可能会随市场的波动出现陡峭的变化，这种现象在局部波动率模型中无法反映出来。</p>
  </li>
</ol>

<p>这些局限性使得局部波动率模型虽然在一些市场条件下可以有效工作，但在捕捉更复杂的波动率行为时表现不佳。因此，后续模型（如SABR模型）被提出，以更好地捕捉市场波动率微笑现象和波动率的动态变化。</p>

<p>sabr不能捕捉全面的波动率</p>

<p>利用利率的衍生品 swap , swaption , cap , floor 做模型参数校准</p>

<p>应用于评价利率衍生品金融商品 \(\sigma\) 而不是 \(\pi\)</p>]]></content><author><name></name></author><category term="financial" /><category term="volatility" /><category term="outline" /><category term="review" /><summary type="html"><![CDATA[SABR-LMM 修正LMM的underlying 波动率假设过于简单 局部波动率缺点 局部波动率模型假设市场的波动率是确定的，即与时间和资产价格变化相关联的波动率曲面是静态的。这意味着市场条件的变化无法动态反映在模型中，特别是在市场出现剧烈波动时，局部波动率模型无法捕捉到波动率的跳变行为。 模型对市场异常事件或突然的波动变化的适应性较差。当市场中存在不确定性或波动率突然变化（如“波动率笑”的出现）时，局部波动率模型通常表现不佳，不能很好地拟合这些市场现象。这会导致在定价复杂衍生品时出现较大误差。 局部波动率模型假设未来波动率与历史波动率一致，并且局部波动率曲线无法自适应调整以适应新的市场条件，这导致其在处理实际交易数据时表现出局限性。 难以捕捉隐含波动率曲线的动态行为。局部波动率模型无法准确反映隐含波动率随时间推移的变化，特别是隐含波动率曲线可能会随市场的波动出现陡峭的变化，这种现象在局部波动率模型中无法反映出来。 这些局限性使得局部波动率模型虽然在一些市场条件下可以有效工作，但在捕捉更复杂的波动率行为时表现不佳。因此，后续模型（如SABR模型）被提出，以更好地捕捉市场波动率微笑现象和波动率的动态变化。 sabr不能捕捉全面的波动率 利用利率的衍生品 swap , swaption , cap , floor 做模型参数校准 应用于评价利率衍生品金融商品 \(\sigma\) 而不是 \(\pi\)]]></summary></entry><entry><title type="html">bond pricing</title><link href="http://localhost:4000/financial/bond/bond/" rel="alternate" type="text/html" title="bond pricing" /><published>2024-10-22T11:24:29+08:00</published><updated>2024-10-22T11:24:29+08:00</updated><id>http://localhost:4000/financial/bond/bond</id><content type="html" xml:base="http://localhost:4000/financial/bond/bond/"><![CDATA[<script>
  MathJax = {
    tex: {
      inlineMath: [['$', '$'], ['\\(', '\\)']],
      displayMath: [['$$', '$$'], ['\\[', '\\]']]
    }
  };
</script>

<script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">compound_interest_rate</span><span class="p">(</span><span class="n">coupon_rate</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">face_value</span><span class="p">):</span>
    <span class="n">coupon_rate</span> <span class="o">=</span> <span class="n">coupon_rate</span> <span class="o">*</span> <span class="n">face_value</span> <span class="o">/</span> <span class="n">m</span>
    <span class="n">years_to_maturity</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="mf">0.5</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mf">1.5</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>
    <span class="nf">return </span><span class="p">(</span><span class="n">coupon_rate</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="n">r</span><span class="o">/</span><span class="n">m</span><span class="p">)</span> <span class="o">**</span> <span class="p">(</span><span class="o">-</span><span class="n">m</span><span class="o">*</span><span class="n">years_to_maturity</span><span class="p">)).</span><span class="nf">sum</span><span class="p">()</span> \
    <span class="o">+</span> <span class="n">face_value</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="n">r</span><span class="o">/</span><span class="n">m</span><span class="p">)</span> <span class="o">**</span> <span class="p">(</span><span class="o">-</span><span class="n">m</span><span class="o">*</span><span class="n">years_to_maturity</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>    
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">exponential_interest_rate</span><span class="p">(</span><span class="n">coupon_rate</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">face_value</span><span class="p">):</span>
    <span class="sh">"""</span><span class="s">
    因此，票面利率为 5% 的债券，
    在连续复利和离散复利下，票面利率的名义值都是 5%。
    但离散复利会将其分成 2.5% 的半年利息，而连续复利则不对票面利率进行分割。
    </span><span class="sh">"""</span>
    <span class="n">coupon_rate</span> <span class="o">=</span> <span class="n">coupon_rate</span> <span class="o">*</span> <span class="n">face_value</span>
    <span class="n">years_to_maturity</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="mf">0.5</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mf">1.5</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">coupon_rate</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">years_to_maturity</span><span class="p">).</span><span class="nf">sum</span><span class="p">()</span> \
    <span class="o">+</span> <span class="n">face_value</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">years_to_maturity</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="sh">'</span><span class="s">__main__</span><span class="sh">'</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="nf">exponential_interest_rate</span><span class="p">(</span><span class="mi">3</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="mf">6.76</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">))</span>
    <span class="nf">print</span><span class="p">(</span><span class="nf">compound_interest_rate</span><span class="p">(</span><span class="mi">6</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mf">6.76</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">))</span>
</code></pre></div></div>

<p>计算 <code class="language-plaintext highlighter-rouge">duration</code> <code class="language-plaintext highlighter-rouge">convexity</code> <code class="language-plaintext highlighter-rouge">dv01</code></p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="c1"># 计算债券价格
</span><span class="k">def</span> <span class="nf">bond_price</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span><span class="p">):</span>
    <span class="n">coupon</span> <span class="o">=</span> <span class="n">face_value</span> <span class="o">*</span> <span class="n">coupon_rate</span>
    <span class="n">price</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">([</span><span class="n">coupon</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">ytm</span><span class="p">)</span> <span class="o">**</span> <span class="n">t</span> <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">periods</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)])</span> <span class="o">+</span> <span class="n">face_value</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">ytm</span><span class="p">)</span> <span class="o">**</span> <span class="n">periods</span>
    <span class="k">return</span> <span class="n">price</span>

<span class="c1"># 修正久期计算
</span><span class="k">def</span> <span class="nf">modified_duration</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span><span class="p">,</span> <span class="n">epsilon</span><span class="o">=</span><span class="mf">1e-4</span><span class="p">):</span>
    <span class="n">price</span> <span class="o">=</span> <span class="nf">bond_price</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span><span class="p">)</span>
    <span class="n">price_up</span> <span class="o">=</span> <span class="nf">bond_price</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span> <span class="o">+</span> <span class="n">epsilon</span><span class="p">)</span>
    <span class="n">price_down</span> <span class="o">=</span> <span class="nf">bond_price</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span> <span class="o">-</span> <span class="n">epsilon</span><span class="p">)</span>
    
    <span class="n">duration</span> <span class="o">=</span> <span class="p">(</span><span class="n">price_down</span> <span class="o">-</span> <span class="n">price_up</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">price</span> <span class="o">*</span> <span class="n">epsilon</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">duration</span>

<span class="c1"># 凸性计算
</span><span class="k">def</span> <span class="nf">convexity</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span><span class="p">,</span> <span class="n">epsilon</span><span class="o">=</span><span class="mf">1e-4</span><span class="p">):</span>
    <span class="n">price</span> <span class="o">=</span> <span class="nf">bond_price</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span><span class="p">)</span>
    <span class="n">price_up</span> <span class="o">=</span> <span class="nf">bond_price</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span> <span class="o">+</span> <span class="n">epsilon</span><span class="p">)</span>
    <span class="n">price_down</span> <span class="o">=</span> <span class="nf">bond_price</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span> <span class="o">-</span> <span class="n">epsilon</span><span class="p">)</span>
    
    <span class="n">convexity</span> <span class="o">=</span> <span class="p">(</span><span class="n">price_up</span> <span class="o">+</span> <span class="n">price_down</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">price</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">price</span> <span class="o">*</span> <span class="n">epsilon</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">convexity</span>

<span class="c1"># DV01 计算
</span><span class="k">def</span> <span class="nf">dv01</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span><span class="p">,</span> <span class="n">epsilon</span><span class="o">=</span><span class="mf">1e-4</span><span class="p">):</span>
    <span class="n">price</span> <span class="o">=</span> <span class="nf">bond_price</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span><span class="p">)</span>
    <span class="n">price_up</span> <span class="o">=</span> <span class="nf">bond_price</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span> <span class="o">+</span> <span class="n">epsilon</span><span class="p">)</span>
    
    <span class="n">dv01</span> <span class="o">=</span> <span class="p">(</span><span class="n">price</span> <span class="o">-</span> <span class="n">price_up</span><span class="p">)</span> <span class="o">/</span> <span class="mf">0.0001</span>  <span class="c1"># 1 个基点（0.01%）
</span>    <span class="k">return</span> <span class="n">dv01</span>

<span class="c1"># 示例参数
</span><span class="n">face_value</span> <span class="o">=</span> <span class="mi">1000</span>  <span class="c1"># 债券面值
</span><span class="n">coupon_rate</span> <span class="o">=</span> <span class="mf">0.05</span>  <span class="c1"># 票息率 5%
</span><span class="n">periods</span> <span class="o">=</span> <span class="mi">10</span>  <span class="c1"># 债券期限 10 年
</span><span class="n">ytm</span> <span class="o">=</span> <span class="mf">0.04</span>  <span class="c1"># 收益率 4%
</span>
<span class="c1"># 计算结果
</span><span class="n">duration</span> <span class="o">=</span> <span class="nf">modified_duration</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span><span class="p">)</span>
<span class="n">convex</span> <span class="o">=</span> <span class="nf">convexity</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span><span class="p">)</span>
<span class="n">dv01_value</span> <span class="o">=</span> <span class="nf">dv01</span><span class="p">(</span><span class="n">face_value</span><span class="p">,</span> <span class="n">coupon_rate</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">ytm</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">修正久期 (Duration) : </span><span class="si">{</span><span class="n">duration</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">凸性 (Convexity) : </span><span class="si">{</span><span class="n">convex</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">DV01 (01的美元价值) : </span><span class="si">{</span><span class="n">dv01_value</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="financial" /><category term="bond" /><summary type="html"><![CDATA[def compound_interest_rate(coupon_rate,m,r,face_value): coupon_rate = coupon_rate * face_value / m years_to_maturity = np.array([0.5,1,1.5,2]) return (coupon_rate * (1+r/m) ** (-m*years_to_maturity)).sum() \ + face_value * (1+r/m) ** (-m*years_to_maturity[-1]) def exponential_interest_rate(coupon_rate,r,face_value): """ 因此，票面利率为 5% 的债券， 在连续复利和离散复利下，票面利率的名义值都是 5%。 但离散复利会将其分成 2.5% 的半年利息，而连续复利则不对票面利率进行分割。 """ coupon_rate = coupon_rate * face_value years_to_maturity = np.array([0.5,1,1.5,2]) return coupon_rate * np.exp(-r*years_to_maturity).sum() \ + face_value*np.exp(-r*years_to_maturity[-1]) if __name__ == '__main__': print(exponential_interest_rate(3/100,6.76/100,100)) print(compound_interest_rate(6/100,2,6.76/100,100)) 计算 duration convexity dv01 import numpy as np # 计算债券价格 def bond_price(face_value, coupon_rate, periods, ytm): coupon = face_value * coupon_rate price = sum([coupon / (1 + ytm) ** t for t in range(1, periods + 1)]) + face_value / (1 + ytm) ** periods return price # 修正久期计算 def modified_duration(face_value, coupon_rate, periods, ytm, epsilon=1e-4): price = bond_price(face_value, coupon_rate, periods, ytm) price_up = bond_price(face_value, coupon_rate, periods, ytm + epsilon) price_down = bond_price(face_value, coupon_rate, periods, ytm - epsilon) duration = (price_down - price_up) / (2 * price * epsilon) return duration # 凸性计算 def convexity(face_value, coupon_rate, periods, ytm, epsilon=1e-4): price = bond_price(face_value, coupon_rate, periods, ytm) price_up = bond_price(face_value, coupon_rate, periods, ytm + epsilon) price_down = bond_price(face_value, coupon_rate, periods, ytm - epsilon) convexity = (price_up + price_down - 2 * price) / (price * epsilon ** 2) return convexity # DV01 计算 def dv01(face_value, coupon_rate, periods, ytm, epsilon=1e-4): price = bond_price(face_value, coupon_rate, periods, ytm) price_up = bond_price(face_value, coupon_rate, periods, ytm + epsilon) dv01 = (price - price_up) / 0.0001 # 1 个基点（0.01%） return dv01 # 示例参数 face_value = 1000 # 债券面值 coupon_rate = 0.05 # 票息率 5% periods = 10 # 债券期限 10 年 ytm = 0.04 # 收益率 4% # 计算结果 duration = modified_duration(face_value, coupon_rate, periods, ytm) convex = convexity(face_value, coupon_rate, periods, ytm) dv01_value = dv01(face_value, coupon_rate, periods, ytm) print(f"修正久期 (Duration) : {duration}") print(f"凸性 (Convexity) : {convex}") print(f"DV01 (01的美元价值) : {dv01_value}")]]></summary></entry><entry><title type="html">深度工作力</title><link href="http://localhost:4000/review/learning/review064/" rel="alternate" type="text/html" title="深度工作力" /><published>2024-10-22T11:24:29+08:00</published><updated>2024-10-22T11:24:29+08:00</updated><id>http://localhost:4000/review/learning/review064</id><content type="html" xml:base="http://localhost:4000/review/learning/review064/"><![CDATA[<p>如何工作?</p>

<p>快速精通專業技術的學習能力
在品質和速度上達到高水準的生產能力</p>

<p>拥抱分心的原因，整理深度工作力</p>

<p>推延晚上的工作，你也不會耽誤太多重要的事。</p>

<p>遠離分心的多數人，加入專注的少數人</p>

<p>「我將過專注的生活，因為那是最好的一種生活。」</p>

<p>艾薩克森遵循一套方法：任何時候，只要他能找到空檔，他就會切換到深度工作模式，投入寫他的書。這就是他能寫出一本近九百頁的鉅著，同時花一天大部分時間當美國最佳雜誌記者的祕訣 。 這種在任何地點都能安排時間適應深度工作的方法，我稱之為記者式哲學</p>

<p>安排分心时间,固定处理浅薄工作</p>

<p>玩记忆游戏,提升专注力</p>

<p>别用网络来娱乐自己</p>

<p>體驗生活的意義，而不只是活著。</p>]]></content><author><name></name></author><category term="review" /><category term="learning" /><summary type="html"><![CDATA[如何工作? 快速精通專業技術的學習能力 在品質和速度上達到高水準的生產能力 拥抱分心的原因，整理深度工作力 推延晚上的工作，你也不會耽誤太多重要的事。 遠離分心的多數人，加入專注的少數人 「我將過專注的生活，因為那是最好的一種生活。」 艾薩克森遵循一套方法：任何時候，只要他能找到空檔，他就會切換到深度工作模式，投入寫他的書。這就是他能寫出一本近九百頁的鉅著，同時花一天大部分時間當美國最佳雜誌記者的祕訣 。 這種在任何地點都能安排時間適應深度工作的方法，我稱之為記者式哲學 安排分心时间,固定处理浅薄工作 玩记忆游戏,提升专注力 别用网络来娱乐自己 體驗生活的意義，而不只是活著。]]></summary></entry><entry><title type="html">如何成为一个会学习的人</title><link href="http://localhost:4000/review/learning/review063/" rel="alternate" type="text/html" title="如何成为一个会学习的人" /><published>2024-10-21T11:24:29+08:00</published><updated>2024-10-21T11:24:29+08:00</updated><id>http://localhost:4000/review/learning/review063</id><content type="html" xml:base="http://localhost:4000/review/learning/review063/"><![CDATA[<h3 id="阅读书本前">阅读书本前</h3>

<p>成为一名会读书的人</p>

<h3 id="书评">书评</h3>

<h4 id="费曼学习法包括四个核心步骤">费曼学习法包括四个核心步骤。</h4>

<p>第一步：选一个你想学习的概念；
第二步：设想面对十岁的孩子，你应该用什么语言解释清楚这个概念，并让孩子完全听懂；
第三步：如果你无法解释清楚，重新回头把这个概念研究一遍，直到这个概念被流利地解释出来；
第四步：继续升华，用更简洁的语言和类比等技巧来完美阐释概念。</p>

<h4 id="康奈尔5r笔记法">康奈尔5R笔记法</h4>

<p>又称康奈尔笔记系统，旨在帮助学生高效地做笔记。康奈尔笔记系统把一页纸分成了三部分：右上最大的空间是我们平时做笔记的地方。左边竖着的一条空间叫作线索栏，用来归纳右边的内容。归纳工作不要在做笔记的时候做，而是在上完课之后回顾，然后把要点都写到左边，这样一方面复习了刚才所学的知识点，另一方面也帮助学生理清了思路。</p>

<p>下面横着的一栏是用来做总结的，就是用一两句话总结这页记录的内容，这个工作可以延后一点儿再做，起到促进思考消化的作用，另外也是笔记内容的浓缩和升华。</p>

<h3 id="评后感">评后感</h3>

<p>复制观念</p>]]></content><author><name></name></author><category term="review" /><category term="learning" /><summary type="html"><![CDATA[阅读书本前 成为一名会读书的人 书评 费曼学习法包括四个核心步骤。 第一步：选一个你想学习的概念； 第二步：设想面对十岁的孩子，你应该用什么语言解释清楚这个概念，并让孩子完全听懂； 第三步：如果你无法解释清楚，重新回头把这个概念研究一遍，直到这个概念被流利地解释出来； 第四步：继续升华，用更简洁的语言和类比等技巧来完美阐释概念。 康奈尔5R笔记法 又称康奈尔笔记系统，旨在帮助学生高效地做笔记。康奈尔笔记系统把一页纸分成了三部分：右上最大的空间是我们平时做笔记的地方。左边竖着的一条空间叫作线索栏，用来归纳右边的内容。归纳工作不要在做笔记的时候做，而是在上完课之后回顾，然后把要点都写到左边，这样一方面复习了刚才所学的知识点，另一方面也帮助学生理清了思路。 下面横着的一栏是用来做总结的，就是用一两句话总结这页记录的内容，这个工作可以延后一点儿再做，起到促进思考消化的作用，另外也是笔记内容的浓缩和升华。 评后感 复制观念]]></summary></entry><entry><title type="html">今天就把明天的事搞定</title><link href="http://localhost:4000/review/learning/review062/" rel="alternate" type="text/html" title="今天就把明天的事搞定" /><published>2024-10-20T11:24:29+08:00</published><updated>2024-10-20T11:24:29+08:00</updated><id>http://localhost:4000/review/learning/review062</id><content type="html" xml:base="http://localhost:4000/review/learning/review062/"><![CDATA[<h3 id="阅读书本前">阅读书本前</h3>

<p>一本定义清单的书</p>

<h3 id="书评">书评</h3>

<p>瞎忙,高效</p>

<p>成功人士不会一天做完所有事情,但每天都有做最重要的事情.</p>

<p>有期限 不然就是愿望清单</p>

<p>3件完成才处理其他事项</p>

<p>记得分类紧急或者重要</p>

<p>碎片完成小清单</p>

<p>排列决定哪些清单要留,每天晚上重新排定任务</p>

<p><code>當我們著重於一點點小進步而非完美解法，精神力會接掌大腦，一切變得有希望得多。</code></p>

<h3 id="评后感">评后感</h3>

<p>當我們著重於一點點小進步而非完美解法，精神力會接掌大腦，一切變得有希望得多。</p>]]></content><author><name></name></author><category term="review" /><category term="learning" /><summary type="html"><![CDATA[阅读书本前 一本定义清单的书 书评 瞎忙,高效 成功人士不会一天做完所有事情,但每天都有做最重要的事情. 有期限 不然就是愿望清单 3件完成才处理其他事项 记得分类紧急或者重要 碎片完成小清单 排列决定哪些清单要留,每天晚上重新排定任务 當我們著重於一點點小進步而非完美解法，精神力會接掌大腦，一切變得有希望得多。 评后感 當我們著重於一點點小進步而非完美解法，精神力會接掌大腦，一切變得有希望得多。]]></summary></entry><entry><title type="html">图解专注力</title><link href="http://localhost:4000/review/learning/review061/" rel="alternate" type="text/html" title="图解专注力" /><published>2024-10-19T11:24:29+08:00</published><updated>2024-10-19T11:24:29+08:00</updated><id>http://localhost:4000/review/learning/review061</id><content type="html" xml:base="http://localhost:4000/review/learning/review061/"><![CDATA[<h3 id="阅读书本前">阅读书本前</h3>

<p>会让人有服从的想法吗?</p>

<h3 id="书评">书评</h3>

<ol>
  <li>场所 换场所</li>
  <li>姿势 坐姿</li>
  <li>饮食 低GI 坚果类</li>
  <li>情绪 不要消极</li>
  <li>运动</li>
  <li>冥想 10分钟也行</li>
</ol>

<p>工作法</p>

<p>90 + 20
25 + 5</p>

<p>每天清空任务,一直排定,完成3件最重要的事</p>

<ul>
  <li>按摩眼睛</li>
  <li>把不安写出来 &gt; 重置<code class="language-plaintext highlighter-rouge">工作记忆</code></li>
  <li>改变气氛(精油)</li>
</ul>

<h3 id="评后感">评后感</h3>

<p>善用工作记忆</p>]]></content><author><name></name></author><category term="review" /><category term="learning" /><summary type="html"><![CDATA[阅读书本前 会让人有服从的想法吗? 书评 场所 换场所 姿势 坐姿 饮食 低GI 坚果类 情绪 不要消极 运动 冥想 10分钟也行 工作法 90 + 20 25 + 5 每天清空任务,一直排定,完成3件最重要的事 按摩眼睛 把不安写出来 &gt; 重置工作记忆 改变气氛(精油) 评后感 善用工作记忆]]></summary></entry></feed>